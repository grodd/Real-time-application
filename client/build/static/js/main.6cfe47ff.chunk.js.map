{"version":3,"sources":["reducers/authReducer.js","reducers/departmentReducer.js","reducers/requestReducer.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/authActions.js","utils/notificationGrammer.js","components/common/Notification.js","components/common/Navbar.js","components/common/PrivateRoute.js","components/common/TextFieldGroup.js","components/auth/Login.js","actions/departmentActions.js","components/auth/Register.js","components/request/RequestItem.js","actions/requestActions.js","components/request/Request.js","components/common/TextAreaFieldGroup.js","components/request/RequestForm.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isAuthenticated","user","users","notifications","showNotificationAlert","departments","pending","approved","forApproval","incomingRequests","rejected","combineReducers","auth","state","arguments","length","undefined","action","console","log","type","Object","objectSpread","payload","id","alert","notification","concat","toConsumableArray","department","request","requests","updatedIncomingRequests","filter","_id","pendingRequests","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","setAuthToken","token","axios","defaults","headers","common","socket","io","setCurrentUser","decoded","setNotificationAlert","NotificationGrammer","param1","param2","text","CREATE_REQUEST","REQUEST_APPROVED","REQUEST_REJECTED","DELETE_PENDING_REQUEST","Notification","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_renderNotification","bind","assertThisInitialized","getNotifications","then","res","getNotificationAlert","_this$props","map","notifGrammer","requestText","notifType","create_request","request_approved","request_rejected","delete_pending_request","actor_id","name","request_for","request_text","notificationGrammer","react_default","a","createElement","DropdownItem","className","moment","Date","created_at","format","Dropdown","isOpen","dropdownOpen","toggle","DropdownToggle","tag","class","onClick","classnames","isAlert","DropdownMenu","right","header","Component","withRouter","connect","dispatch","get","data","success","userData","Navbar","showNavSidebar","showCollapseIcon","onItemClick","handleLogout","handleRegister","handleLogin","toggleNotification","setState","_this2","window","innerWidth","addEventListener","getUserInfo","history","push","logout","src","alt","react_router_dom","to","common_Notification","classname","localStorage","removeItem","emit","userId","on","_ref","component","rest","objectWithoutProperties","react_router","assign","render","TextFieldGroup","value","placeholder","label","error","onChange","disabled","htmlFor","is-valid","defaultProps","Login","email","password","errors","onSubmit","e","defineProperty","target","preventDefault","loginUser","_this$state","loginErrors","common_TextFieldGroup","post","setItem","jwt_decode","catch","err","setDepartments","Register","_renderdepartmentOptions","key","confirmPassword","department_id","getDepartments","registerUser","registerErrors","RequestItem","_renderOption","deleteRequest","_renderInfo","updateRequest","_renderUpdateTime","_this$props2","_this$props3","clasName","created_for","_this$props4","date","updated_on","options","_this$props5","user_id","status","_this$props6","delete","removePendingRequest","put","removeIncomingRequest","Request","_renderRequests","pathname","location","getPendingRequests","getApprovedRequests","getIncomingRequests","getRejectedRequests","react_lazyload_lib_default","height","request_RequestItem","departmentId","TextAreaFieldGroup","info","is-invalid","_renderUserOptions","getDepartmentsForReq","getDepartmentUsers","createRequest","common_TextAreaFieldGroup","jwtToken","decode","App","es","common_Navbar","exact","path","common_PrivateRoute","RequestForm","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cfe47ff.chunk.js","sourcesContent":["import { SET_CURRENT_USER, SET_USERS, SET_NOTIFICATIONS,SET_NOTIFICATION_ALERT, ADD_NOTIFICATION } from '../actions/types';\n\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    users:[],\n    notifications:[],\n    showNotificationAlert:false\n};\n\n\nexport default function (state = initialState, action) {\n    console.log(action)\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: action.payload.id ? true : false,\n                user: action.payload\n            };\n      \n        case SET_USERS:\n        return{\n            ...state,\n            users:action.users\n        }\n        case SET_NOTIFICATIONS:\n          return{\n              ...state,\n              notifications:action.notifications\n          }\n        case SET_NOTIFICATION_ALERT:\n            return{\n                ...state,\n                showNotificationAlert:action.alert\n            }\n        case ADD_NOTIFICATION:\n            return{\n                ...state,\n                notifications:[action.notification, ...state.notifications]\n            }\n\n        default:\n            return state\n    }\n}\n","import { SET_DEPARTMENTS } from '../actions/types';\n\n\nconst initialState = {\n    departments:[]\n};\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_DEPARTMENTS:\n            console.log(action);\n            return {\n                departments:action.departments\n            };\n        default:\n            return state\n    }\n}\n","import { ADD_PENDING_REQUEST,ADD_APPROVED_REQUEST,REMOVE_PENDING_REQUEST,\n         ADD_INCOMING_REQUEST,REMOVE_INCOMING_REQUEST, SET_PENDING_REQUESTS,\n         SET_APPROVED_REQUESTS, SET_INCOMING_REQUESTS,SET_REJECTED_REQUESTS, ADD_REJECTED_REQUEST } from '../actions/types';\n\n\nconst initialState = {\n    pending:[],\n    approved:[],\n    forApproval:[],\n    incomingRequests:[],\n    rejected:[]\n};\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_PENDING_REQUESTS:\n            return {\n                ...state,\n                pending:action.requests\n            };\n        case SET_APPROVED_REQUESTS:\n            return {\n                ...state,\n                approved:action.requests\n            };\n        case ADD_APPROVED_REQUEST:\n            return {\n                ...state,\n                approved:[action.request, ...state.approved]\n            };\n        case REMOVE_INCOMING_REQUEST:\n            const updatedIncomingRequests = state.incomingRequests.filter(request => request._id != action.id)\n             return{\n                 ...state,\n                 incomingRequests:updatedIncomingRequests\n             }\n       case ADD_INCOMING_REQUEST:\n              return{\n                  ...state,\n                  incomingRequests:[action.request,...state.incomingRequests]\n              }\n        case SET_INCOMING_REQUESTS:\n            return {\n                ...state,\n                incomingRequests:action.requests\n            };\n        case ADD_PENDING_REQUEST:\n            return {\n                ...state,\n                pending:[action.request, ...state.pending]\n            };\n        case REMOVE_PENDING_REQUEST:\n           const pendingRequests = state.pending.filter(request => request._id != action.id)\n            return{\n                ...state,\n                pending:pendingRequests\n            }\n        case SET_REJECTED_REQUESTS:\n          return{\n              ...state,\n              rejected:action.requests\n          }\n        case ADD_REJECTED_REQUEST:\n          return{\n              ...state,\n              rejected:[action.request, ...state.rejected]\n          }\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport departmentReducer from './departmentReducer';\nimport requestReducer from './requestReducer';\n\n\nexport default combineReducers({\n    auth: authReducer,\n    department: departmentReducer,\n    request:requestReducer\n});","//User Actions Types\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_USER = \"SET_USER\";\nexport const SET_DEPARTMENTS = \"SET_DEPARTMENTS\";\nexport const SET_USERS = \"SET_USERS\";\n\nexport const SET_REQUEST = \"SET_REQUEST\";\nexport const ADD_PENDING_REQUEST = \"ADD_PENDING_REQUEST\";\nexport const ADD_APPROVED_REQUEST = \"ADD_APPROVED_REQUEST\";\nexport const REMOVE_PENDING_REQUEST = \"REMOVE_PENDING_REQUEST\";\nexport const ADD_INCOMING_REQUEST = \"ADD_INCOMING_REQUEST\";\nexport const REMOVE_INCOMING_REQUEST = \"REMOVE_INCOMING_REQUEST\";\nexport const SET_PENDING_REQUESTS = \"SET_PENDING_REQUESTS\";\nexport const SET_APPROVED_REQUESTS = \"SET_APPROVED_REQUESTS\";\nexport const SET_INCOMING_REQUESTS = \"SET_INCOMING_REQUESTS\";\nexport const SET_NOTIFICATIONS = \"SET_NOTIFICATIONS\";\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nexport const SET_NOTIFICATION_ALERT = \"SET_NOTIFICATION_ALERT\";\nexport const ADD_REJECTED_REQUEST = \"ADD_REJECTED_REQUEST\";\nexport const SET_REJECTED_REQUESTS = \"SET_REJECTED_REQUESTS\";","import thunk from \"redux-thunk\";\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\nconst initialState = []\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n    if (token) {\n        //Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        //Delete Auth Heder\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\n\nexport default setAuthToken;","import { SET_CURRENT_USER,SET_USERS , ADD_INCOMING_REQUEST,REMOVE_INCOMING_REQUEST,\n         REMOVE_PENDING_REQUEST, ADD_REJECTED_REQUEST, ADD_APPROVED_REQUEST, SET_NOTIFICATIONS,\n        ADD_NOTIFICATION, SET_NOTIFICATION_ALERT} from './types';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from '../utils/setAuthToken';\nimport {addIncomingRequest} from './requestActions'\nimport io from 'socket.io-client';\nlet socket = io('/request');\n\nexport const setCurrentUser = decoded  =>{\n   \n    return {\n        type:SET_CURRENT_USER,\n        payload: decoded\n    }\n    \n}\n\nexport const setUsers = users =>({\n    type:SET_USERS,\n    users\n})\n\n\nexport const addNotification = (notification) =>({\n    type:ADD_NOTIFICATION,\n    notification\n})\n\nexport const setNotifications = (notifications) =>({\n    type:SET_NOTIFICATIONS,\n    notifications\n})\n\nexport const setNotificationAlert = (alert) =>({\n    type:SET_NOTIFICATION_ALERT,\n    alert\n})\n\nexport const getNotificationAlert =  (userData) =>  dispatch => {\n    dispatch(setNotificationAlert(false))\n}\n\n\n\n\n\n\n\nexport const registerUser =  (userData) =>  dispatch => {\n    return   axios.post('/api/users/register', userData)\n        .then(res => {\n            // console.log(res);\n            if (res.data.success) {\n                // console.log(\"User Registered successfully\");\n            }\n            return res;\n        });\n}\n\nexport const loginUser = (data) => dispatch => {\n return  axios.post('/api/users/login', data)\n        .then(res => {\n            // console.log(\"res : \", res);\n            // console.log(res.data.success);\n            if (res.data.success) {\n                const { token } = res.data;\n                //set token to local storage\n                // console.log(\"token \", token);\n                localStorage.setItem('jwtToken', token);\n\n                //set token to Auth Header\n                setAuthToken(token);\n\n                //Decode token to get user data\n                const decoded = jwt_decode(token);\n                // console.log(\"decoded \", decoded);\n\n                //set Current User\n                dispatch(setCurrentUser(decoded));\n            }\n            // console.log(res);\n            return res;\n        }).catch(err => (err));\n};\n\n\n\nexport const logout = () => dispatch =>{\n    localStorage.removeItem('jwtToken')\n    dispatch(setCurrentUser({}))\n}\n\n\nexport const getNotifications = () => dispatch =>{\n    return axios.get('/api/request/notifications')\n                .then(res =>{\n                    if(res.data.success){\n                        dispatch(setNotifications(res.data.notifications))\n                    }\n                    return res;\n                })\n}\n\n\nexport const getUserInfo = () => dispatch =>{\n    return axios.get('/api/request/getUserInfo').then(res =>{\n        if(res.data.success){\n            socket.emit('initClientInfo',{userId:res.data.user._id})\n           \n            socket.on('new-incoming-request', (request) => {\n                // console.log(\"----------------- new incoming request ---------------\",request);\n                    dispatch({type:ADD_INCOMING_REQUEST,request})\n             })\n           socket.on('remove-incoming-request',(request)=>{\n               dispatch({type:REMOVE_INCOMING_REQUEST,id:request._id})\n           })\n\n           socket.on('delete-pending-request',(request)=>{\n               dispatch({type:REMOVE_INCOMING_REQUEST,id:request._id})\n           })\n\n           socket.on('request-approved',(request)=>{\n            dispatch({type:REMOVE_INCOMING_REQUEST,id:request._id})\n            dispatch({type:REMOVE_PENDING_REQUEST,id:request._id})\n            dispatch({type:ADD_APPROVED_REQUEST,request})\n          })\n\n          socket.on('request-rejected',(request)=>{\n            dispatch({type:REMOVE_INCOMING_REQUEST,id:request._id})\n            dispatch({type:REMOVE_PENDING_REQUEST,id:request._id})\n            dispatch({type:ADD_REJECTED_REQUEST,request})\n         })\n\n\n\n         socket.on('notification',(data)=>{\n            //  console.log(\"------------notification data ----------\",data);\n             dispatch(addNotification(data))\n             dispatch(setNotificationAlert(true))\n         })\n\n        }\n        return res;\n    })\n}\n\nexport const getDepartmentUsers = (department_id) => dispatch =>{\n   return axios.get(`/api/users/${department_id}`).then(res =>{\n       if(res.data.success){\n           dispatch(setUsers(res.data.users))\n       }\n       return res;\n   })\n}\n\n\n\n","const NotificationGrammer = (action, param1, param2,text) => {\n    let obj = {\n        \"CREATE_REQUEST\":`${param1} has created the request \"${text}\" for ${param2}`,\n        \"REQUEST_APPROVED\":`${param2} has approved the request \"${text}\" created by ${param1}`,\n        \"REQUEST_REJECTED\":`${param2} has rejected the request \"${text}\" created by ${param1}`,\n        \"DELETE_PENDING_REQUEST\":`${param1} has deleted the request \"${text}\" created for ${param2}`\n\n    }\n\n    return obj[action]\n}\n\n\nexport default NotificationGrammer;","import React, { Component } from 'react'\nimport {withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'; \nimport notificationGrammer from '../../utils/notificationGrammer.js';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport notifType from '../../utils/notificationType.json'\nimport {getNotifications,getNotificationAlert} from '../../actions/authActions';\nimport moment from 'moment';\nimport classnames from 'classnames'\nimport LazyLoad from 'react-lazyload';\n\nclass Notification extends Component {\n    constructor(props){\n        super(props);\n\n        this._renderNotification = this._renderNotification.bind(this);\n        this.setNotificationAlert = this.setNotificationAlert.bind(this);\n    }\n\n\n\n    componentWillMount(){\n        const {notifications} = this.props;\n        if(notifications.length === 0){\n            this.props.getNotifications()\n                 .then(res=>{\n                    //   // console.log(res);\n                 })\n        }\n    }\n\n    setNotificationAlert(){\n        this.props.getNotificationAlert(false)\n    }\n\n\n    _renderNotification(){\n        const { notifications,user } = this.props;\n         // console.log(notifications)\n        if (notifications.length > 0) {\n           return notifications.map(notification => {\n               let notifGrammer;\n               let param1;\n               let param2;\n               let requestText;\n               switch(notification.type){\n                   case notifType.create_request:\n                         param1 = notification.actor_id.name;\n                         param2 = notification.request_for.name;\n                         requestText = notification.payload.request_text;\n                         break;\n                    case notifType.request_approved:\n                         param1 = notification.actor_id.name;\n                         param2 = notification.request_for.name;\n                         requestText = notification.payload.request_text;\n                         break;\n                    case notifType.request_rejected:\n                         param1 = notification.actor_id.name;\n                         param2 = notification.request_for.name;\n                         requestText = notification.payload.request_text;\n                         break;\n                    case notifType.delete_pending_request:\n                         param1 = notification.actor_id.name;\n                         param2 = notification.request_for.name;\n                         requestText = notification.payload.request_text;\n                         break;\n                    default:\n                        break;\n               }\n               if(user.id == notification.request_for._id) param2 = \"you\"\n               notifGrammer = notificationGrammer(notification.type, param1, param2, requestText);\n               return(\n                  \n                    <DropdownItem className=\"notification-item\">\n                     <div className=\"notif-grammer\">{notifGrammer}</div>\n                     <div className=\"request-item-top\">{moment(new Date(notification.created_at)).format('DD MMM YY')} </div>\n                   </DropdownItem>\n   \n               \n               )\n\n           })\n       } \n  }\n\n\n    render() {\n        const {showNotificationAlert} = this.props;\n        return (\n            <Dropdown isOpen={this.props.dropdownOpen} toggle={this.props.toggle}>\n             <DropdownToggle tag=\"span\">\n              <div className=\"nav_item common-pointer\">   \n                   <i class=\"material-icons\" onClick={this.setNotificationAlert}>notifications</i>\n                   <div className={classnames(\"notification-alert\",{isAlert:showNotificationAlert})}></div>\n                   </div>\n            </DropdownToggle>\n            <DropdownMenu className=\"notification-menu\" right>\n            <DropdownItem header>Notifications</DropdownItem>\n               {this._renderNotification()}\n            </DropdownMenu>\n            </Dropdown>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    notifications:state.auth.notifications,\n    user:state.auth.user,\n    showNotificationAlert:state.auth.showNotificationAlert\n});\n\n\nexport default withRouter(connect(mapStateToProps, {getNotifications,getNotificationAlert})(Notification));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './common.css';\nimport { Link,withRouter } from 'react-router-dom';\nimport {logout,getUserInfo} from '../../actions/authActions'\nimport Notification from './Notification.js';\n\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showNavSidebar: false,\n            showCollapseIcon: false,\n            dropdownOpen:false\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onItemClick = this.onItemClick.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.toggleNotification = this.toggleNotification.bind(this);\n    }\n\n\n    toggleNotification(){\n        this.setState({dropdownOpen: !this.state.dropdownOpen})\n    }\n\n\n    componentWillMount() {\n        const viewPortWidth = window.innerWidth;\n        // console.log(\"width : \", viewPortWidth);\n       \n        if (viewPortWidth < 600) {\n            this.setState({\n                showCollapseIcon: true\n            })\n        }\n        window.addEventListener('resize', () => {\n            let viewPortWidth = window.innerWidth;\n            if (viewPortWidth < 600) {\n                this.setState({\n                    showCollapseIcon: true,\n                })\n            } else {\n                this.setState({\n                    showCollapseIcon: false,\n                    showNavSidebar: false\n                })\n            }\n        });\n    }\n\n\n    componentDidMount(){\n        this.props.getUserInfo()\n            .then(res =>{\n                // console.log(res.data);\n            })\n    }\n\n    handleRegister(){\n        this.props.history.push('/register');\n        this.setState({showNavSidebar:false})\n\n    }\n\n\n    handleLogout(){\n        this.props.logout();\n        this.setState({showNavSidebar:false})\n        this.props.history.push('/login');\n    }\n\n    handleLogin(){\n        this.props.history.push('/login');\n    }\n\n\n\n\n    toggle() {\n        this.setState({\n            showNavSidebar: !this.state.showNavSidebar\n        });\n    }\n\n    onItemClick() {\n        this.setState({\n            showNavSidebar: false\n        })\n    }\n\n    render() {\n        const { auth } = this.props;\n        const {dropdownOpen} = this.state;\n        return (\n            <div>\n                <div className=\"nav\">\n                    <div className=\"d-flex justify-content-between align-items-center nav-top\">\n                        <div className=\"nav-brand\"><img src='website_logo.png' alt=\"switch on logo\"></img></div>\n                        {this.state.showCollapseIcon ?\n                            <div className=\"collapse-navbar common-pointer\" onClick={this.toggle}>\n                                <div className=\"collapsible-nav-icon\"></div>\n                                <div className=\"collapsible-nav-icon\"></div>\n                                <div className=\"collapsible-nav-icon\"></div>\n                            </div> : \n                           (auth.isAuthenticated ? \n                           <div className=\"d-flex align-items-center nav_item_right\">\n                                <div className=\"nav_item\"> <Link to='/'>Create</Link></div>\n                                <div className=\"nav_item\"> <Link to=\"/approved\">Approved</Link></div>\n                                <div className=\"nav_item\"> <Link to='/pending'>Pending</Link></div>\n                                <div className=\"nav_item\"> <Link to=\"/rejected\">Rejected</Link></div>\n                                <div className=\"nav_item\"> <Link to=\"/incoming-request\">Incoming Request</Link></div>\n                                <div className=\"nav_item\" onClick={this.toggleNotification}>\n                                 <Notification dropdownOpen={dropdownOpen} toggle={this.toggleNotification}/>\n                                 </div>\n                                <div className=\"nav-sidebar-item common-pointer\" onClick={this.handleLogout}>Logout</div>\n                            </div>:null)\n                        }\n                    </div>\n                </div>\n                {this.state.showNavSidebar &&\n                    <div className=\"d-flex justify-content-end nav-navbar\">\n                        <div className=\"navbar-container\">\n                            {auth.isAuthenticated ?\n                                <ul className=\"nav-sidebar-items\">\n                                <li className=\"nav-sidebar-item common-pointer\">\n                                        \n                                    </li>\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.onItemClick}>\n                                        {\n                                             <Link to='/pending'>Pending</Link>\n                                        }\n                                    </li>\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.onItemClick}>\n                                        <Link to=\"/approved\">Approved</Link>\n                                    </li>\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.onItemClick}>\n                                        <Link to=\"/incoming-request\">Incoming Request</Link>\n                                    </li>\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.onItemClick}>\n                                        notif\n                                    </li>\n                                    \n                                    <hr classname=\"nav-sidebar-item-divider common-pointer\" />\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.handleLogout}>Logout</li>\n                                </ul>\n                                : <ul className=\"nav-sidebar-items common-pointer\">\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.handleRegister}>Register</li>\n                                    <li className=\"nav-sidebar-item common-pointer\" onClick={this.handleLogin}>Login</li>\n                                </ul>\n                            }\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n});\n\n\nexport default withRouter(connect(mapStateToProps, {logout,getUserInfo})(Navbar));","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n    // console.log(\"auth : \", auth)\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                auth.isAuthenticated === true ? (\n                    <Component {...props} />\n                ) : (\n                        <Redirect to=\"/login\" />\n                    )\n            }\n        />\n    )\n};\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n    name,\n    value,\n    type,\n    placeholder,\n    label,\n    error,\n    onChange,\n    disabled\n}) => {\n    return (\n        <div className=\"form-group\">\n            {label && <label className={classnames(\"d-flex form_label\",)} htmlFor={name}>{label}</label>}\n            <input\n                type={type}\n                value={value}\n                className={classnames(\"form-control input-field\", { 'is-valid': error })}\n                name={name}\n                placeholder={placeholder}\n                onChange={onChange}\n                disabled={disabled}\n            />\n            {error && <div className=\"error-info\">{error}</div>}\n        </div>\n    )\n}\n\nTextFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.string\n};\n\nTextFieldGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { loginUser } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './auth.css';\nimport {withRouter,Link} from 'react-router-dom';\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    componentWillMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const { loginUser } = this.props;\n        const { email, password } = this.state;\n        const userData = { email, password };\n        this.props.loginUser(userData).then(res =>{\n            // console.log(\"reached here\")\n            if(res.data.success){\n                this.props.history.push('/');\n            }else{\n                const loginErrors = res.data.errors;\n                let errors = {}\n                if(loginErrors.email)errors.email = loginErrors.email;\n                if(loginErrors.password)errors.password = loginErrors.password;\n                this.setState({errors})\n            }\n        })\n        \n    }\n\n\n   \n    render() {\n        const { errors } = this.state;\n        // console.log(errors)\n        return (\n            <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"login-form-container\">\n                    <div className=\"d-flex align-items-center justify-content-center   form-header\">\n                        <div className=\"login-intro-text\">\n                       \n                        <div className=\"text-14\">Login or Sign up to our community</div>\n                        </div>\n                    </div>\n                    <div className=\"form-container\">\n                        <form className=\"d-flex flex-column justify-content-center\" onSubmit={this.onSubmit}>\n                            <TextFieldGroup\n                                name=\"email\"\n                                type=\"email\"\n                                label=\"Email\"\n                                value={this.state.email}\n                                placeholder=\"Email Address\"\n                                onChange={this.onChange}\n                                error={errors.email}\n                            />\n                            <TextFieldGroup\n                                name=\"password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                onChange={this.onChange}\n                                value={this.state.password}\n                                placeholder=\"Password\"\n                                error={errors.password}\n                            />\n                            <input className=\"common-pointer btn btn-primary auth-submit-button\" type=\"submit\" value=\"Login\" />\n                        </form>\n                    </div>\n                    <div className=\"d-flex justify-content-center align-items-center\">\n                    <div>don't have account? </div>\n                    <div className=\"common-pointer or-sign-up-btn\" >\n                    <Link to=\"/register\">Sign Up</Link></div>                    \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    auth: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n})\n\n\nexport default withRouter(connect(mapStateToProps, { loginUser })(Login));","import {SET_DEPARTMENTS} from './types'\nimport axios from 'axios';\n\n\n\nexport const setDepartments = (departments) =>({\n    type:\"SET_DEPARTMENTS\",\n    departments\n})\n\nexport const getDepartments = () => dispatch =>{\n    return axios.get('/api/department/getDepartments').then(res =>{\n        if(res.data.success){\n            dispatch(setDepartments(res.data.departments))\n        }\n        return res;\n    })\n}\n\n\n\nexport const getDepartmentsForReq = () => dispatch =>{\n    return axios.get('/api/department/getDepartmentsForReq').then(res =>{\n        if(res.data.success){\n            dispatch(setDepartments(res.data.departments))\n        }\n        return res;\n    })\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport PropTypes from 'prop-types';\nimport { registerUser } from '../../actions/authActions';\nimport { getDepartments } from '../../actions/departmentActions';\nimport './auth.css';\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {},\n            department_id:''\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n\n    componentWillMount() {\n        this.props.getDepartments();\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    onChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n        const { registerUser } = this.props;\n        const { name, email, password, confirmPassword,department_id } = this.state;\n        const userData = { name, email, password, confirmPassword, department_id };\n        registerUser(userData).then(res=>{\n            if(res.data.success){\n                this.props.history.push('/login');\n            }else{\n                const registerErrors = res.data.errors;\n                let errors = {}\n                if(registerErrors.email)errors.email = registerErrors.email;\n                if(registerErrors.password)errors.password = registerErrors.password;\n                if(registerErrors.confirmPassword)errors.confirmPassword = registerErrors.confirmPassword;\n                if(registerErrors.department_id)errors.department_id = registerErrors.department_id;\n                if(registerErrors.name)errors.name = registerErrors.name;\n\n                this.setState({errors})\n            }\n        })\n        \n    }\n\n    _renderdepartmentOptions = () =>{\n        const {departments} = this.props;\n        return departments.length > 0 ? (\n            departments.map(department =>{ \n              return (\n                <option key={department._id} value={department._id}>{department.name}</option>\n              )\n              })\n          ) : (null)\n    }\n\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"login-form-container\">\n                    <div className=\"d-flex align-items-center justify-content-center form-header\">\n                        <h2>Register</h2>\n                    </div>\n                    <div className=\"form-container\">\n                        <form className=\"d-flex flex-column justify-content-center\" onSubmit={this.onSubmit}>\n                            <TextFieldGroup\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                value={this.state.name}\n                                placeholder=\"Full Name\"\n                                onChange={this.onChange}\n                                error={errors.name}\n                            />\n                            <TextFieldGroup\n                                name=\"email\"\n                                type=\"email\"\n                                label=\"Email\"\n                                value={this.state.email}\n                                placeholder=\"Email Address\"\n                                onChange={this.onChange}\n                                error={errors.email}\n                            />\n                            <TextFieldGroup\n                                name=\"password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                onChange={this.onChange}\n                                value={this.state.password}\n                                placeholder=\"Password\"\n                                error={errors.password}\n                            />\n                            <TextFieldGroup\n                                name=\"confirmPassword\"\n                                type=\"password\"\n                                label=\"Confirm Password\"\n                                onChange={this.onChange}\n                                value={this.state.confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                error={errors.confirmPassword}\n                            />\n                            <div className=\"custom-select-container\">\n                                 <select \n                                   className=\"select-department-item\" \n                                   name=\"department_id\" \n                                   value={this.state.department_id} \n                                   onChange={this.onChange}\n                                   >\n                                  <option key=\"1\" value=\"\">Select Department</option>\n                                     {this._renderdepartmentOptions()}\n                                 </select>\n                                 {errors.department_id && <div className=\"error-info\">{errors.department_id}</div>}\n                            </div>\n                            <input className=\"btn btn-primary auth-submit-button\" type=\"submit\" value=\"Register\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    departments: PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors,\n    departments:state.department.departments\n});\n\nexport default withRouter(connect(mapStateToProps, { registerUser,getDepartments })(Register));\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport {deleteRequest,updateRequest} from '../../actions/requestActions.js';\nimport moment from 'moment';\nimport { userInfo } from 'os';\n\nclass RequestItem extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            type:'',\n            dropdownOpen:false\n        }\n        this.toggle = this.toggle.bind(this);\n        this._renderOption = this._renderOption.bind(this);\n        this.deleteRequest = this.deleteRequest.bind(this);\n        this._renderInfo = this._renderInfo.bind(this);\n        this.updateRequest = this.updateRequest.bind(this);\n        this._renderUpdateTime = this._renderUpdateTime.bind(this);\n    }\n\n\n    componentDidMount(){\n      \n    }\n   \n    toggle(){\n        this.setState({dropdownOpen:!this.state.dropdownOpen})\n    }\n\n    deleteRequest(){\n        const {deleteRequest,request} = this.props;\n        const id = request._id;\n        deleteRequest(id).then(res =>{\n            console.log(res)\n        })\n    }\n\n    updateRequest(data){\n        const {updateRequest,request} = this.props;\n        updateRequest(request._id,data).then(res =>{\n            console.log(res);\n        })\n    }\n\n    _renderInfo(){\n        const {type,request} = this.props;\n        let title;\n        \n            title =(\n                <div className=\"d-flex request-item-title\">\n                  <div clasName=\"title-text\">Reques for : {request.created_for.name}</div>\n                  <div className=\"dept-info\">{'('} Dept : {request.created_for.department_id.name} { ')'}</div>\n                </div>\n            )\n        \n        return title;\n    }\n    _renderUpdateTime(){\n        const {type,request} = this.props;\n        let text;\n        let date = moment(new Date(request.updated_on)).format('DD MMM YY')\n        if(type === 'approved'){\n            text = `Approved on : ${date}`\n        }else if(type === 'rejected'){\n            text = `Rejected On : ${date}`\n        }\n        return (\n            <div className=\"request-item-footer\">\n                {text} \n            </div>\n        )\n    }\n\n    _renderOption(){\n        const {type,request,user} = this.props;\n        const user_id = user.id;\n        let options;\n        if(type === 'pending'){\n            options = (\n                <DropdownItem onClick={this.deleteRequest}>Delete</DropdownItem>\n            );\n        }else if(type === 'approved'){\n\n        }else if(type === 'incoming-request'){\n            console.log(user_id);\n            console.log(request.created_for._id)\n            if(request.created_for._id == user_id){\n                options = (\n                    <div>\n                        <DropdownItem onClick={()=> this.updateRequest({status:'approved'})}>Approve</DropdownItem>\n                        <DropdownItem onClick={() => this.updateRequest({status:'rejected'})}>Reject</DropdownItem>\n                    </div>\n                );\n            }else{\n                return null;\n            }\n            \n        }\n\n       return type === 'pending'  || type === 'incoming-request' ? (\n                   <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                     <DropdownToggle tag=\"span\" className=\"common-pointer\">\n                        <i class=\"material-icons\">more_vert</i>\n                     </DropdownToggle>\n                     <DropdownMenu right>\n                          {options}\n                     </DropdownMenu>\n                    </Dropdown>\n       ) : (null)\n    }\n\n\n\n\n\n\n    render() {\n        const {request,type} = this.props;\n        \n        return (\n            <div className=\"request-item-container\">\n           \n              <div className=\"d-flex justify-content-between\">\n                 <div>\n                     <div className=\"request-item-top\">Created on :{moment(new Date(request.created_at)).format('DD MMM YY')} </div>\n                     <div className=\"request-text-box\">{request.text}</div>\n                 </div>\n                 {this._renderOption()}\n             </div>\n             {this._renderInfo()}\n             {(type === 'rejected' || type==='approved')&&this._renderUpdateTime()}\n            </div>\n        )\n    }\n}\n\n\n\n\n\nconst mapStateToProps = state => ({\n  user:state.auth.user\n});\n\nexport default withRouter(connect(mapStateToProps, { deleteRequest,updateRequest})(RequestItem));\n","import {ADD_PENDING_REQUEST,ADD_APPROVED_REQUEST,REMOVE_PENDING_REQUEST,\n        ADD_INCOMING_REQUEST,REMOVE_INCOMING_REQUEST,SET_PENDING_REQUESTS,SET_APPROVED_REQUESTS,\n        SET_INCOMING_REQUESTS,SET_REJECTED_REQUESTS,ADD_REJECTED_REQUEST} \n        from './types'\nimport axios from 'axios';\n\n\n\nexport const addPendingRequest = (request) =>({\n   type: ADD_PENDING_REQUEST,\n    request\n})\n\nexport const addApprovedRequest = (request) =>({\n    type:ADD_APPROVED_REQUEST,\n    request\n})\n\nexport const removePendingRequest = (id) =>({\n    type: REMOVE_PENDING_REQUEST,\n    id\n})\n\n\n\nexport const removeIncomingRequest = (id) =>({\n    type: REMOVE_INCOMING_REQUEST,\n    id\n})\n\n\nexport const setPendingRequests = (requests) =>({\n    type: SET_PENDING_REQUESTS,\n    requests\n})\n\nexport const setApprovedRequests = (requests) =>({\n    type: SET_APPROVED_REQUESTS,\n    requests\n})\n\nexport const setIncommingRequests = (requests) =>({\n    type: SET_INCOMING_REQUESTS,\n    requests\n})\n\nexport const setRejectedRequests = (requests) =>({\n    type: SET_REJECTED_REQUESTS,\n    requests\n})\n\n\n\n\nexport const createRequest = (data) => dispatch =>{\n    return axios.post('/api/request',data).then(res =>{\n        if(res.data.success){\n            dispatch(addPendingRequest(res.data.request))\n        }\n        return res;\n    })\n}\n\nexport const updateRequest = (id,data) => dispatch =>{\n    return axios.put(`/api/request/${id}`,data).then(res =>{\n        if(res.data.success){\n            dispatch(removeIncomingRequest(id))\n        }\n        return res;\n    })\n}\n\nexport const deleteRequest = (id) => dispatch =>{\n    return axios.delete(`/api/request/${id}`).then(res =>{\n        if(res.data.success){\n            dispatch(removePendingRequest(id))\n        }\n        return res;\n    })\n}\n\n\n\nexport const getPendingRequests = () => dispatch =>{\n    return axios.get(`/api/request/pending`).then(res =>{\n        if(res.data.success){\n            dispatch(setPendingRequests(res.data.requests))\n        }\n        return res;\n    })\n}\n\n\nexport const getApprovedRequests = () => dispatch =>{\n    return axios.get(`/api/request/approved`).then(res =>{\n        if(res.data.success){\n            dispatch(setApprovedRequests(res.data.requests))\n        }\n        return res;\n    })\n}\n\n\nexport const getIncomingRequests = (departmentId) => dispatch =>{\n    return axios.get(`/api/request/${departmentId}/incoming`).then(res =>{\n        if(res.data.success){\n            dispatch(setIncommingRequests(res.data.requests))\n        }\n        return res;\n    })\n}\n\n\nexport const getRejectedRequests = () => dispatch =>{\n    return axios.get(`/api/request/rejected`).then(res =>{\n        if(res.data.success){\n            dispatch(setRejectedRequests(res.data.requests))\n        }\n        return res;\n    })\n}\n\n\n\n// export const addIncomingRequest = (request) => dispatch =>{\n//     socket.on('create-request', (data) => {\n//         console.log(\"------------------socket data--------------\\n\",data)\n//         dispatch({type:ADD_INCOMING_REQUEST, request})\n//     })\n// }\n    \n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {getPendingRequests,getApprovedRequests, getIncomingRequests, getRejectedRequests} from '../../actions/requestActions';\nimport RequestItem from './RequestItem';\nimport './request.css';\nimport LazyLoad from 'react-lazyload';\n\n\n\nclass Request extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            type:''\n        }\n\n        this._renderRequests = this._renderRequests.bind(this);\n    }\n\n\n    componentDidMount(){\n        const {pathname} = this.props.location;\n        const {user} = this.props.auth;\n        // console.log(user);\n    \n        const {pending,approved,rejected,incomingRequests,getPendingRequests,\n            getApprovedRequests,getIncomingRequests, getRejectedRequests} = this.props;\n        if(pathname === '/pending'){\n            this.setState({type:'pending'})\n            if(pending.length === 0){\n                getPendingRequests().then(res=>{\n                    // console.log(res);\n                })\n            }\n        }else if(pathname === '/approved'){\n            this.setState({type:'approved'})\n            if(approved.length === 0){\n                getApprovedRequests().then(res =>{\n                    // console.log(res);\n                })\n            }\n        }else if(pathname === '/incoming-request'){\n            this.setState({type:'incoming-request'})\n            if(incomingRequests.length === 0){\n                getIncomingRequests(user.department_id).then(res =>{\n                    // console.log(res);\n                })\n            }\n        }else if(pathname === '/rejected'){\n            this.setState({type:'rejected'});\n            if(rejected.length === 0){\n                getRejectedRequests().then(res=>{\n                    // console.log(res);\n                })\n            }\n        }\n    }\n\n\n    _renderRequests(){\n        const {type} = this.state;\n        const {pending,approved,incomingRequests,rejected} = this.props;\n        let requests = []\n        if(type === 'pending'){\n            requests = pending\n        }else if(type === 'approved'){\n            requests = approved;\n        }else if(type === 'incoming-request'){\n            requests = incomingRequests\n        }else if(type === 'rejected'){\n            requests = rejected;\n        }\n\n        return requests.length > 0 ? (\n            requests.map(request =>{ \n              return (\n                  <LazyLoad height={100}>\n                      <RequestItem key={request._id} type={type} request={request} />\n                  </LazyLoad>\n              )\n              })\n          ) : (null)\n    }\n\n\n\n\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column align-items-center justify-content-center request-container\">\n                {this._renderRequests()}\n            </div>\n        )\n    }\n}\n\n\n\n\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    departments:state.department.departments,\n    pending:state.request.pending,\n    approved:state.request.approved,\n    incomingRequests:state.request.incomingRequests,\n    rejected:state.request.rejected\n});\n\nexport default withRouter(connect(mapStateToProps, {getPendingRequests,getApprovedRequests,getIncomingRequests, getRejectedRequests })(Request));\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextAreaFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  onChange\n}) => {\n  return (\n    <div className=\"form-group\">\n      <textarea\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"error-info\">{error}</div>}\n    </div>\n  );\n};\n\nTextAreaFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default TextAreaFieldGroup;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport PropTypes from 'prop-types';\nimport { getDepartmentUsers } from '../../actions/authActions';\nimport { getDepartmentsForReq } from '../../actions/departmentActions';\nimport { createRequest } from '../../actions/requestActions';\nimport '../auth/auth.css';\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            created_for: \"\",\n            errors: {},\n            department_id:''\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n\n    componentWillMount() {\n        // this.props.getDepartments();\n        // if (this.props.auth.isAuthenticated) {\n        //     this.props.history.push('/');\n        // }\n\n        this.props.getDepartmentsForReq();\n    }\n\n    onChange(e) {\n        if(e.target.name === 'department_id'){\n            const department_id = e.target.value;\n            this.props.getDepartmentUsers(department_id)\n                 .then(res =>{\n                     console.log(res.data);\n                 })\n        }\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        const { createRequest } = this.props;\n        const { text,created_for,department_id } = this.state;\n        let errors = {};\n        if(text === '')errors.text = \"Message field is required\";\n        if(created_for === '')errors.created_for = \"Select a user to send a request\";\n        if(department_id === '')errors.department_id = \"Department field is required\";\n        if(errors.text || errors.department_id || errors.created_for){\n            this.setState({errors})\n        }else{\n            const userData = { text, department_id ,created_for};\n            createRequest(userData);\n        }\n    }\n\n    _renderdepartmentOptions = () =>{\n        const {departments} = this.props;\n        return departments.length > 0 ? (\n            departments.map(department =>{ \n              return (\n                <option key={department._id} value={department._id}>{department.name}</option>\n              )\n              })\n          ) : (null)\n    }\n\n    _renderUserOptions = () =>{\n        const {users} = this.props;\n        return users.length > 0 ? (\n            users.map(user =>{ \n              return (\n                <option key={user._id} value={user._id}>{user.name}</option>\n              )\n              })\n          ) : (null)\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"login-form-container\">\n                    <div className=\"d-flex align-items-center justify-content-center form-header\">\n                        <h2>Create Request</h2>\n                    </div>\n                    <div className=\"form-container\">\n                        <form className=\"d-flex flex-column justify-content-center\" onSubmit={this.onSubmit}>\n                            <TextAreaFieldGroup\n                                name=\"text\"\n                                type=\"text\"\n                                label=\"Message\"\n                                value={this.state.text}\n                                placeholder=\"Type Message\"\n                                onChange={this.onChange}\n                            />\n                            {errors.text && <div className=\"error-info\">{errors.text}</div>}\n                            <div className=\"custom-select-container\">\n                                 <select \n                                   className=\"select-department-item\" \n                                   name=\"department_id\" \n                                   value={this.state.department_id} \n                                   onChange={this.onChange}\n                                   >\n                                  <option key=\"1\" value=\"\">Select Department</option>\n                                     {this._renderdepartmentOptions()}\n                                 </select>\n                                 {errors.department_id && <div className=\"error-info\">{errors.department_id}</div>}\n                            </div>\n                            {this.state.department_id &&\n                            <div className=\"custom-select-container\">\n                              <select \n                              className=\"select-department-item\" \n                              name=\"created_for\" \n                              value={this.state.created_for} \n                              onChange={this.onChange}\n                              >\n                              <option key=\"1\" value=\"\">Select User</option>\n                                {this._renderUserOptions()}\n                             </select>\n                             {errors.created_for && <div className=\"error-info\">{errors.created_for}</div>}\n                            </div>\n                            }\n                            <input className=\"btn btn-primary auth-submit-button\" type=\"submit\" value=\"Send Request\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    departments: PropTypes.object.isRequired,\n    users: PropTypes.object.isRequired,\n   \n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    users:state.auth.users,\n    errors: state.errors,\n    departments:state.department.departments\n});\n\nexport default withRouter(connect(mapStateToProps, { createRequest,getDepartmentsForReq, getDepartmentUsers })(Register));\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Navbar from './components/common/Navbar';\nimport PrivateRoute from './components/common/PrivateRoute';\n\n//Auth Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\n\nimport Request from './components/request/Request.js';\nimport RequestForm from './components/request/RequestForm';\n\n\n\n\n//Actions\nimport { setCurrentUser } from './actions/authActions';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\n\n\n\nif (localStorage.jwtToken) {\n \n  setAuthToken(localStorage.jwtToken);\n  const decode = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decode));\n}\n\nclass App extends Component {\n\n  render(){\n    return (\n      <Provider store={store}>\n      <Router>\n       <div className=\"App\">\n       <Navbar />\n       <Route exact path=\"/login\" component={Login} />\n       <Route exact path=\"/register\" component={Register} />\n       <Switch>\n            <PrivateRoute exact path=\"/pending\" component={Request} />\n        </Switch>\n        <Switch>\n            <PrivateRoute exact path=\"/\" component={RequestForm} />\n        </Switch>\n        <Switch>\n            <PrivateRoute exact path=\"/approved\" component={Request} />\n        </Switch>\n        <Switch>\n            <PrivateRoute exact path=\"/incoming-request\" component={Request} />\n        </Switch>\n        <Switch>\n            <PrivateRoute exact path=\"/rejected\" component={Request} />\n        </Switch>\n       </div>\n      </Router>\n      </Provider>\n    );\n  }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}